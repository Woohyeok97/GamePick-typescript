name: Deploy Elastic Beanstalk

# main branch에 push 되면 실행
on:
  push:
    branches:
      - main
  # 깃허브페이지에서 직접 수동으로 워크플로우 실행
  workflow_dispatch:

# 워크플로우 동안 실행할 '작업들'
jobs:
  # build라는 이름의 '작업' 정의
  build:
    runs-on: ubuntu-latest # action이 구동될 OS 환경을 세팅

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node # action이 구동될 Node 버전을 세팅해.
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      
        # 멀티 깃헙 시크릿 env에 추가
      - name: Set multi environment variables
        run: | # run은 이때 실행할 스크립트, | 는 여러줄에 걸쳐서 스크립트를 실행
          echo "${{ secrets.OAUTH_VARS }}" >> .env
          echo "${{ secrets.NEXTAUTH_VARS }}" >> .env

        # 단일 깃헙 시크릿 env에 추가
      - name: Set single environment variables
        run: |
          echo "MONGODB_URL=${{ secrets.MONGODB_URL }}" >> .env
          echo "AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}" >> .env

        # NEXT_PUBLIC 환경변수 env에 추가
      - name: Set public environment variables
        run: |
          echo "NEXT_PUBLIC_GAMES_API=/api/games" >> .env
          echo "NEXT_PUBLIC_LIKES_API=/api/likes" >> .env
          echo "NEXT_PUBLIC_AWS_S3_API=/api/s3" >> .env

      - name: yarn install # package.json에 있는 의존성 파일들을 설치해준다.(yarn)
        run: yarn install

      - name: Bulid
        run: yarn build

      - name: make zip file # node modules 제외한 압축 파일을 만들어준다.
        run: zip -r app.zip . -x "node_modules/*"

      - name: Deploy to EB # Elastic Beanstalk으로 배포를 진행한다.
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: game-pick
          environment_name: Game-pick-env
          version_label: ${{ github.run_number }}
          region: ap-northeast-2
          deployment_package: app.zip